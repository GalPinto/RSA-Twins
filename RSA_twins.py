e = 65537
c = 684151956678815994103733261966890872908254340972007896833477109225858676207046453897176861126186570268646592844185948487733725335274498844684380516667587
n = 14783703403657671882600600446061886156235531325852194800287001788765221084107631153330658325830443132164971084137462046607458019775851952933254941568056899

#use factordb
q = 121588253559534573498320028934517990374721243335397811413129137253981502291629
p = 121588253559534573498320028934517990374721243335397811413129137253981502291631

def egcd(a, b):
    if a == 0:
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)

def modinv(a, m):
    g, x, y = egcd(a, m)
    if g != 1:
        raise Exception('modular inverse does not exist')
    else:
        return x % m

# ed mod phi = 1     M^e mod n = c     M = c^d mod n

phi = (q-1)*(p-1)
d=modinv(e,phi)
m=pow(c,d,n) # M = c^d mod n
f=bytes.fromhex(hex(m)[2:])

print("[+] Flag is : ",f)